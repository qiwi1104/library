Для каждого языка отдельные packages потому что @Entity означает какую-либо таблицу
Сомневаюсь насчет функции isInTable() (используется в FinishedBookImpl), хз где ей лучше: в fbImpl или CommonActions

---------------------------------------------------------------------
Доп. даты:
При попытке добавить книгу в Finished, проверяется есть ли книга с таким же именем в этой таблице
если есть:
    создается объект additionalDates
    ему присваиваются значения:
        id найденной книги
        введенные в Start & End даты
    этот объект добавляется в таблицу additional_dates_{language}, где {language} - english/russian
если нет:
    книга добавляется в таблицу
---------------------------------------------------------------------

---------------------------------------------------------------------
CommonActions class:
нужен для того чтобы уменьшить дублирование кода
setBookAttributesFromInput(T book, Input input):
    используется в edit методах
    на вход поступает книга и введенные в форму данные, и функция устанавливает атрибуты книги в соответствии с входными данными
---------------------------------------------------------------------
books_to_read/finished_books_language_description 2x:
id, books_to_read/finished_book_id, description
в description помещается все, что было до этого в start, end, found description по правилу:
    start description + \n
    end description + \n
    found description







Что сделано:
6/24/21 - самые основы
6/25/21 - добавлены доп. даты, их отображение в таблице
6/26/21 - связал finished books и additional dates таблицы
6/27/21:
    сделал функцию "finish book", но не нравится что у btrController есть доступ к finishedBookService
    сделал функцию редактирования книги
    немного улучшил (как мне кажется) структура проекта
7/1/21:
    сделал сортировку, но не нравится что так много методов (мб можно изменить)
    сделал создание таблицы из json файла
    немного улучшил взаимосвязи в оформлении
7/3/21:
    если при загрузке finished books (для books to read такого нет потому что я рассчитываю что таких книг нет и не будет) таблицы из json файла start/end даты были четырехзначными (т.е. просто год был записан), то в соответствующий столбец записывается 1970-1-1, а в description записывается год\n + все остальное что было в description
    при создании таблицы из json файла в свою таблицу добавляются доп. даты
    чуточку улучшил оформление
    добавлены книги на русском
    уменьшил количество кода
7/9/21:
    auto_increment в books to read таблицах добавил
7/10/21:
    теперь после удаления не последней btr книги все id после удаленной книги обновляются (иначе не обновлялось, то есть могло быть 73, 75, 76 и т.п)
    добавлено сохранение btr & fb таблиц в json файл
    добавлено время сохранения в названии файла
7/15/21:
    доделал отображение доп. дат
    merged all descriptions into one single description
    теперь все services имеют общих предков, стало меньше кода
    при удалении из finishedBook сделал пересчет id
    теперь не обязательно вводить все параметры кроме дат и изменяемого параметра при edit book
7/19/21:
    теперь даты показываются в нормальном формате
    немного изменил код сохранения таблицы, теперь не нужно вводить Language.json, нужно просто ввести путь до папки, но при загрузке таблицы из файла все равно нужно указывать полностью путь до файла
    добавлен Spanish


todo:
    сделать sort сначала по основному столбцу, потом по id (встретил это issue в english btr)
    сделать нормальным отображение additional dates (frontend)
    сделать более адекватное и логичное оформление (frontend)
    пересмотреть ответственность CommonActions
    сделать обработку ошибок (каких? там где есть throw в методах, наверно)
    сделать так чтобы можно было не вводить даты при попытке изменить какую-либо книгу (thymeleaf)
    узнать можно ли как-то улучшить сортировку (см. 7/1/21)